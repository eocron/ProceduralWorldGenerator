<UserControl x:Class="ProceduralWorldGenerator.Views.CreateNodes.CreateVectorNodeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:ProceduralWorldGenerator.Common.Converters;assembly=ProceduralWorldGenerator.Common"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:createNodes1="clr-namespace:ProceduralWorldGenerator.Views.CreateNodes"
             xmlns:validators="clr-namespace:ProceduralWorldGenerator.Common.Validators;assembly=ProceduralWorldGenerator.Common"
             xmlns:vector="clr-namespace:ProceduralWorldGenerator.ViewModels.Nodes.Vector"
             xmlns:labeled="clr-namespace:ProceduralWorldGenerator.Common.Controls.Labeled;assembly=ProceduralWorldGenerator.Common"
             mc:Ignorable="d"
             MinWidth="250"
             d:DesignHeight="400"
             d:DesignWidth="250"
             d:DataContext="{d:DesignInstance vector:CreateVectorNodeViewModel}">
    <UserControl.Resources>
        <ResourceDictionary Source="CreateMenuViewResources.xaml"/>
    </UserControl.Resources>
    
    <createNodes1:CreateMenuView Title="Create vector"
                                     OkButtonCommand="{Binding CreateOperation}" 
                                     CancelButtonCommand="{Binding CancelOperation}"
                                     DataContext="{Binding}"
                                     d:DataContext="{d:DesignInstance vector:CreateVectorNodeViewModel}">
        <createNodes1:CreateMenuView.Content>
            <StackPanel>
                <CheckBox Content="Is constant" IsChecked="{Binding NodeViewModel.IsConstant}"/>
                <labeled:LabeledIntegerInput 
                    LabelText="Vector dimension:"
                    Input="{Binding NodeViewModel.Dimension}"
                    Minimum="1"/>
                <labeled:LabeledStringInput 
                    LabelText="Variable name:" 
                    IsEnabled="{Binding Path=NodeViewModel.IsConstant, Converter={converters:InverseBooleanConverter}, Mode=OneWay}"
                    Visibility="{Binding NodeViewModel.IsConstant, Converter={converters:BooleanToVisibilityConverter Negate=True}, Mode=OneWay}">
                    <labeled:LabeledStringInput.InputText>
                        <Binding Path="NodeViewModel.VariableName" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validators:VariableNameValidator/>
                            </Binding.ValidationRules>
                        </Binding>
                    </labeled:LabeledStringInput.InputText>
                </labeled:LabeledStringInput>
                <StackPanel Visibility="{Binding NodeViewModel.IsConstant, Converter={converters:BooleanToVisibilityConverter}}">
                    <TextBlock Text="Constant values:"/>
                    <ItemsControl ItemsSource="{Binding NodeViewModel.Values}"  
                                  IsEnabled="{Binding NodeViewModel.IsConstant, Mode=OneWay}" 
                                  Visibility="{Binding NodeViewModel.IsConstant, Converter={converters:BooleanToVisibilityConverter}}"
                                  Style="{StaticResource ThirdPartyStyle}"
                                  HorizontalContentAlignment="Stretch"
                                  Margin="2 0 2 0">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <labeled:LabeledSingleInput
                                    Input="{Binding Path=Item, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="x="
                                    Increment="1"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel >
            </StackPanel>
        </createNodes1:CreateMenuView.Content>
    </createNodes1:CreateMenuView>
</UserControl>
